"""
Django settings for djWeb365 project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(r)y-t$n0dwdd=tt@5ss3bwkr8=^q1(sim04shw9p2-h5att$3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'register',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'djWeb365.urls'

#specify TEMPLATES_DIRS
TEMPLATE_PATH=os.path.join(BASE_DIR, 'templates')
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_PATH,],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djWeb365.wsgi.application'

"""
Database 
postgres + psycopg2 (this is the django interface to pstgres) 

enter the following commands in console to create db

sudo su - postgres (change linux to user postgres, its password has not been updated yet)
createdb urlcrawler
psql/postgres

CREATE USER postgres_nick WITH PASSWORD 'postgres_nick';#semi colon is important
alter ROLE postgres_nick WITH LOGIN;
GRANT ALL PRIVILEGES ON DATABASE urlcrawler TO postgres_nick; 
\q
#remember to migrate your db before use
python manage.py makemigrations
python manage.py migrate

git clone https://github.com/rthalley/dnspython
cd dnspython/
python setup.py install

python manage.py createsuperuser #use env to use the correct python
#db superuser created as nick, nick, hongshanzhang012@gmail.com

In order for Django to be able to talk to our database we need to install a backend for PostgreSQL
pip install psycopg2 (do not use sudo, install it in virtualenv too)
"""

DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
            'NAME': 'urlcrawler',                      # Or path to database file if using sqlite3.
            # The following settings are not used with sqlite3:
            'USER': 'postgres_nick',
            'PASSWORD': 'postgres_nick',
            'HOST': '127.0.0.1',                      # Empty for localhost through domain sockets or           '127.0.0.1' for localhost through TCP.
            'PORT': '',                      # Set to empty string for default.
        }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATIC_URL='/static/'
STATIC_PATH=BASE_DIR
STATIC_PATH.replace('src', 'env') #change path from djWeb365/src/static to djWeb365/env/static
STATIC_PATH=os.path.join(BASE_DIR,'static'); #STATIC_ROOT
#STATIC_PATH=os.path.join(BASE_DIR,'static'); #STATIC_ROOT
#STATIC_ROOT="/media/nick/Data/my/workspace/djWeb365/src/static/"

STATICFILES_DIRS=(
    STATIC_PATH,
)



